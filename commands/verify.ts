import { SlashCommandBuilder, ChatInputCommandInteraction, EmbedBuilder } from 'discord.js';
import dotenv from 'dotenv';

dotenv.config();

export const data = new SlashCommandBuilder()
    .setName('verify')
    .setDescription('‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏ï‡∏±‡∏ß‡∏ï‡∏ô‡∏ú‡∏π‡πâ‡πÄ‡∏Ç‡πâ‡∏≤‡πÅ‡∏Ç‡πà‡∏á‡∏Ç‡∏±‡∏ô')
    .addStringOption(option =>
        option.setName('student_id')
            .setDescription('‡∏£‡∏´‡∏±‡∏™‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤')
            .setRequired(true)
    )
    .addStringOption(option =>
        option.setName('nickname')
            .setDescription('‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏•‡πà‡∏ô')
            .setRequired(true)
    )
    .addNumberOption(option =>
        option.setName('section')
            .setDescription('sec ‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô')
            .setRequired(true)
    )

export async function execute(interaction: ChatInputCommandInteraction) {
    const discordId = interaction.user.id;
    const member = await interaction.guild?.members.fetch(discordId);

    const studentId = interaction.options.getString('student_id');
    const nickname = interaction.options.getString('nickname');
    const section = interaction.options.getNumber('section');

    await interaction.deferReply({ ephemeral: true });

    const allowedSections = [1, 2, 3];

    if (!studentId || !nickname || !section) {
        const failEmbed = new EmbedBuilder()
            .setColor(0xff0000)
            .setTitle('‚ùå ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏ï‡∏±‡∏ß‡∏ï‡∏ô‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à')
            .setDescription('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô')
            .setTimestamp()
            .setFooter({
                text: 'üîê verify system',
                iconURL: 'http://hub.it.kmitl.ac.th/hub/wp-content/uploads/2025/02/logo-white.png'
            });
        await interaction.deleteReply();
        await interaction.channel?.send({ embeds: [failEmbed] });
        return;
    }

    if (!allowedSections.includes(section)) {
        const invalidSecEmbed = new EmbedBuilder()
            .setColor(0xff0000)
            .setTitle('‚ö†Ô∏è ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• section ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á')
            .setDescription(`‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡πâ‡∏≠‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡πÅ‡∏Ñ‡πà‡∏ï‡∏≤‡∏° Sec ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏à‡∏¥‡∏á`)
            .setTimestamp()
            .setFooter({
                text: 'üîê verify system',
                iconURL: 'http://hub.it.kmitl.ac.th/hub/wp-content/uploads/2025/02/logo-white.png'
            });
        await interaction.deleteReply();
        await interaction.channel?.send({ embeds: [invalidSecEmbed] });
        return;
    }

    const sectionRoles = {
        1: '1390368345567662113',
        2: '1390368403377750088',
        3: '1390368446528618668' 
    };

    const it23RoleId = '1390368273320644639';
    const secRoleId = sectionRoles[section];
    
    await member?.roles.add([it23RoleId, secRoleId]);
    await member?.setNickname(`${nickname} Sec${section}`);

    // await member?.roles.add(interaction.guil
    // d?.roles.cache.find(role => role.name === 'IT23')!);
    // await member?.setNickname(nickname + ' Sec' + section)

    const successEmbed = new EmbedBuilder()
        .setColor(0x00ff00)
        .setTitle('‚úÖ ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏ï‡∏±‡∏ß‡∏ï‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß')
        .setDescription([
            `> üë§ **StudentId :** ${studentId}`,
            `> üß∏ **‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏•‡πà‡∏ô :** ${nickname}`,
            `> üè∑Ô∏è **SEC :** ${section}`,
            `> üé∫ **‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏¢‡∏® :** <@&${it23RoleId}> + <@&${secRoleId}>`
        ].join('\n'))
        .setThumbnail(interaction.user.displayAvatarURL())
        .setTimestamp()
        .setFooter({
            text: 'üîê verify system',
            iconURL: 'http://hub.it.kmitl.ac.th/hub/wp-content/uploads/2025/02/logo-white.png'
        });

    await interaction.deleteReply();
    await interaction.channel?.send({ embeds: [successEmbed] });
    console.log('‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏ï‡∏±‡∏ß‡∏ï‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß');
    return;
}
